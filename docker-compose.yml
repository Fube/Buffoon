services:
    nginx:
        image: nginx
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf
        ports:
            - 80:80
        #     - 443:443
        depends_on:
            - frontend

    db:
        hostname: db
        image: mysql
        environment:
            MYSQL_ROOT_PASSWORD: password
        volumes:
            - ~/docker/jokes-application/mysql:/var/lib/mysql
        ports:
            - 3307:3306
        healthcheck:
            test:
                [
                    "CMD",
                    "mysqladmin",
                    "ping",
                    "-h",
                    "localhost",
                    "-p$MYSQL_ROOT_PASSWORD",
                ]
            interval: 10s
            timeout: 10s
            retries: 5
            start_period: 40s

    userdb:
        hostname: userdb
        image: mongo
        volumes:
            - ~/docker/jokes-application/mongo:/data/db
        healthcheck:
            test:
                [
                    "CMD",
                    "echo",
                    "db.runCommand('ping').ok",
                    "|",
                    "mongo",
                    "mongo:27017/ratings_service",
                    "--quiet",
                ]
            interval: 10s
            timeout: 10s
            retries: 5
            start_period: 40s

    rabbitmq:
        hostname: rabbitmq
        image: rabbitmq

    jokes-service:
        hostname: jokesservice
        build: ./JokeService
        environment:
            spring.datasource.username: root
            spring.datasource.password: password
            spring.datasource.url: jdbc:mysql://db:3306/jokes_service
            spring.rabbitmq.host: rabbitmq
            spring.flyway.url: jdbc:mysql://db:3306/
        # ports:
        #     - 8080:8080
        depends_on:
            db:
                condition: service_healthy
        restart: always

    ratings-service:
        hostname: ratingsservice
        build: ./RatingService
        # ports:
        #     - 8081:8081
        environment:
            JOKE_SERVICE_BASE_URL: http://jokesservice:8080
            spring.datasource.username: root
            spring.datasource.password: password
            spring.datasource.url: jdbc:mysql://db:3306/ratings_service
            server.port: 8081
            spring.rabbitmq.host: rabbitmq
            spring.flyway.url: jdbc:mysql://db:3306/
        depends_on:
            db:
                condition: service_healthy
        restart: always

    user-service:
        hostname: userservice
        build: ./UserService
        environment:
            - PORT=8082
            - DB_URI=mongodb://userdb:27017
        depends_on:
            userdb:
                condition: service_healthy
        restart: always

    frontend:
        hostname: frontend
        build: ./Frontend

    backed:
        build: ./BackedFront
        hostname: backedfront
        environment:
            - PORT=8083
            - JOKE_SERVICE_BASE=http://jokesservice:8080
            - RATING_SERVICE_BASE=http://ratingsservice:8081
            - USER_SERVICE_BASE=http://userservice:8082
        ports:
            - 8083:8083
